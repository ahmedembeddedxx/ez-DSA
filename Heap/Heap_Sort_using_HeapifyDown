#include <iostream>
using namespace std;
void printArray(int arr[], int N)
{
	for (int i = 0; i < N; ++i)
		cout << arr[i] << " ";
	cout << "\n";
}

void heapifydown(int heap[], int N, int index) {
	while (true) {
		int leftChildIndex = 2 * index + 1;
		int rightChildIndex = 2 * index + 2;
		int largest = index;

		if (leftChildIndex < N && heap[leftChildIndex] > heap[largest]) {
			largest = leftChildIndex;
		}

		if (rightChildIndex < N && heap[rightChildIndex] > heap[largest]) {
			largest = rightChildIndex;
		}

		if (largest != index) {
			swap(heap[index], heap[largest]);
			index = largest;
		}
		else {
			break;
		}
	}
}
void heapifyup(int arr[], int N, int i)
{
	while (i > 0)
	{
		int PI = (i + 1) / 2;
		if (arr[PI] < arr[i])
		{
			swap(arr[PI], arr[i]);
			i = PI;
		}
		else
			break;
	}

}

void heapSort(int arr[], int N)
{

	cout << "Array: \n";
	printArray(arr, N);
	for (int i = N / 2 - 1; i >= 0; i--)
		heapifydown(arr, N, i);


	for (int i = N - 1; i >= 0; i--) {

		swap(arr[0], arr[i]);
		heapifydown(arr, i, 0);
	}
}


int main()
{
	int arr[] = { 12, 11, 13, 5, 6, 7 };
	int N = sizeof(arr) / sizeof(arr[0]);
	heapSort(arr, N);
	cout << "Sorted Array:\n";
	printArray(arr, N);
}
