#include <iostream>
#include <stack>
#include <string>
#include <cstring>
#include <queue>
#include <list>
#include <vector>
using namespace std;

string infix_to_postfix(string str)
{
	stack<char> s;
	string result;

	for (int i = 0; i < str.length(); i++)
	{
		if (str[i] == '+' || str[i] == '-' || str[i] == '/' || str[i] == '*' || str[i] == '(')
			s.push(str[i]);
		else if (str[i] != ')')
			result += str[i];
		else if (str[i] == ')')
		{
			while (s.top() != '(' && !s.empty())
			{
				result += s.top();
				s.pop();
			}
			s.pop();
		}
	}
	while (!s.empty())
	{
		result += s.top(); s.pop();
	}
	return result;

}


int main() {
	cout << infix_to_postfix("((A+B)-C*(D/E))+F");
}
